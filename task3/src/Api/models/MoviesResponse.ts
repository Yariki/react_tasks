/* tslint:disable */
/* eslint-disable */
/**
 * Preference public API
 * Preference public API
 *
 * The version of the OpenAPI document: 0.1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from "../runtime";
import type { Movie } from "./Movie";
import { MovieFromJSON, MovieFromJSONTyped, MovieToJSON } from "./Movie";

/**
 *
 * @export
 * @interface MoviesResponse
 */
export interface MoviesResponse {
  /**
   *
   * @type {Array<Movie>}
   * @memberof MoviesResponse
   */
  data?: Array<Movie>;
  /**
   *
   * @type {number}
   * @memberof MoviesResponse
   */
  total?: number;
  /**
   *
   * @type {number}
   * @memberof MoviesResponse
   */
  offset?: number;
  /**
   *
   * @type {number}
   * @memberof MoviesResponse
   */
  limit?: number;
}

/**
 * Check if a given object implements the MoviesResponse interface.
 */
export function instanceOfMoviesResponse(value: object): boolean {
  let isInstance = true;

  return isInstance;
}

export function MoviesResponseFromJSON(json: any): MoviesResponse {
  return MoviesResponseFromJSONTyped(json, false);
}

export function MoviesResponseFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean
): MoviesResponse {
  if (json === undefined || json === null) {
    return json;
  }
  return {
    data: !exists(json, "data")
      ? undefined
      : (json["data"] as Array<any>).map(MovieFromJSON),
    total: !exists(json, "total") ? undefined : json["total"],
    offset: !exists(json, "offset") ? undefined : json["offset"],
    limit: !exists(json, "limit") ? undefined : json["limit"],
  };
}

export function MoviesResponseToJSON(value?: MoviesResponse | null): any {
  if (value === undefined) {
    return undefined;
  }
  if (value === null) {
    return null;
  }
  return {
    data:
      value.data === undefined
        ? undefined
        : (value.data as Array<any>).map(MovieToJSON),
    total: value.total,
    offset: value.offset,
    limit: value.limit,
  };
}
